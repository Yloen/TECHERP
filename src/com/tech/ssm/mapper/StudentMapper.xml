<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tech.ssm.mapper.StudentMapper">
	<resultMap id="BaseResultMap"
		type="com.tech.ssm.domain.Student">
		<id column="student_id" jdbcType="VARCHAR" property="student_id" />
		<result column="student_name" jdbcType="VARCHAR"
			property="student_name" />
		<result column="student_grade" jdbcType="INTEGER"
			property="student_grade" />
		<result column="student_sex" jdbcType="VARCHAR"
			property="student_sex" />
		<result column="student_professional" jdbcType="VARCHAR"
			property="student_professional" />
		<result column="student_status" jdbcType="VARCHAR"
			property="student_status" />
		<result column="student_admissions" jdbcType="VARCHAR"
			property="student_admissions" />
		<result column="student_class" jdbcType="VARCHAR"
			property="student_class" />
	</resultMap>
	<sql id="Base_Column_List">
		student_id, student_name, student_grade, student_sex,
		student_professional, student_status,
		student_admissions,student_class
	</sql>

	<!-- 根据id查 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from student
		where student_id = #{student_id,jdbcType=VARCHAR}
	</select>

	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		student
		where student_id = #{student_id,jdbcType=VARCHAR}
	</delete>

	<!-- 增加 -->
	<insert id="insert" parameterType="com.tech.ssm.domain.Student">
		insert into student
		(student_id, student_name, student_grade, student_sex,
		student_professional, student_status,student_admissions)
		values
		(#{student_id,jdbcType=VARCHAR}, #{student_name,jdbcType=VARCHAR},
		#{student_grade,jdbcType=INTEGER},
		#{student_sex,jdbcType=VARCHAR},#{student_professional,jdbcType=VARCHAR},
		#{student_status,jdbcType=VARCHAR},#{student_admissions,jdbcType=VARCHAR},#{student_class,jdbcType=VARCHAR})
	</insert>


	<insert id="insertSelective"
		parameterType="com.tech.ssm.domain.Student">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="student_id != null">
				student_id,
			</if>
			<if test="student_name != null">
				student_name,
			</if>
			<if test="student_grade != null">
				student_grade,
			</if>
			<if test="student_sex != null">
				student_sex,
			</if>
			<if test="student_professional != null">
				student_professional,
			</if>
			<if test="student_status != null">
				student_status,
			</if>
			<if test="student_admissions != null">
				student_admissions,
			</if>
			<if test="student_class != null">
				student_class,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="student_id != null">
				#{student_id,jdbcType=VARCHAR},
			</if>
			<if test="student_name != null">
				#{student_name,jdbcType=VARCHAR},
			</if>
			<if test="student_grade != null">
				#{student_grade,jdbcType=INTEGER},
			</if>
			<if test="student_sex != null">
				#{student_sex,jdbcType=VARCHAR},
			</if>
			<if test="student_professional != null">
				#{student_professional,jdbcType=VARCHAR},
			</if>
			<if test="student_status != null">
				#{student_status,jdbcType=VARCHAR},
			</if>
			<if test="student_admissions != null">
				#{student_admissions,jdbcType=VARCHAR},
			</if>
			<if test="student_class != null">
				#{student_class,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective"
		parameterType="com.tech.ssm.domain.Student">
		update student
		<set>
			<if test="student_name != null">
				student_name = #{student_name,jdbcType=VARCHAR},
			</if>
			<if test="student_grade != null">
				student_grade = #{student_grade,jdbcType=INTEGER},
			</if>
			<if test="student_sex != null">
				student_sex = #{student_sex,jdbcType=VARCHAR},
			</if>
			<if test="student_professional != null">
				student_professional =
				#{student_professional,jdbcType=VARCHAR},
			</if>
			<if test="student_status != null">
				student_status = #{student_status,jdbcType=VARCHAR},
			</if>
			<if test="student_admissions != null">
				student_admissions =
				#{student_admissions,jdbcType=VARCHAR},
			</if>
			<if test="student_class != null">
				student_class = #{student_class,jdbcType=VARCHAR},
			</if>
		</set>
		where student_id = #{student_id,jdbcType=VARCHAR}
	</update>
	<!-- 更新 -->
	<update id="updateByPrimaryKey"
		parameterType="com.tech.ssm.domain.Student">
		update student
		set student_name =
		#{student_name,jdbcType=VARCHAR},
		student_grade =
		#{student_grade,jdbcType=INTEGER},
		student_sex =
		#{student_sex,jdbcType=VARCHAR},
		student_professional =
		#{student_professional,jdbcType=VARCHAR},
		student_status =
		#{student_status,jdbcType=VARCHAR},
		student_admissions =
		#{student_admissions,jdbcType=VARCHAR},
		student_class =
		#{student_class,jdbcType=VARCHAR}
		where student_id =
		#{student_id,jdbcType=VARCHAR}
	</update>

	<!-- 模糊查询 -->
	<select id="queryAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from student
		<where>
			<if test="student_id!=null and student_id!=''">
				and student_id like concat("%",#{student_id},"%")
			</if>
			<if test="student_name!=null and student_name!=''">
				and student_name like concat("%",#{student_name},"%")
			</if>
			<if test="student_grade!=null and student_grade!=''">
				and student_grade like concat("%",#{student_grade},"%")
			</if>
			<if test="student_sex!=null and student_sex!=''">
				and student_sex like concat("%",#{student_sex},"%")
			</if>
			<if test="student_professional!=null and student_professional!=''">
				and student_professional like
				concat("%",#{student_professional},"%")
			</if>
			<if test="student_status!=null and student_status!=''">
				and student_status like concat("%",#{student_status},"%")
			</if>
			<if test="student_admissions!=null and student_admissions!=''">
				and student_admissions like
				concat("%",#{student_admissions},"%")
			</if>
			<if test="student_class!=null and student_class!=''">
				and student_class like concat("%",#{student_class},"%")
			</if>
		</where>
	</select>

</mapper>