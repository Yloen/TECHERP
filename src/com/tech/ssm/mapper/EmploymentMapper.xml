<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tech.ssm.mapper.EmploymentMapper">
	<resultMap id="BaseResultMap" type="com.tech.ssm.domain.Employment">
		<id column="employment_id" jdbcType="VARCHAR" property="employment_id" />
		<result column="employment_name" jdbcType="VARCHAR" property="employment_name" />
		<result column="employment_company" jdbcType="VARCHAR" property="employment_company" />
		<result column="employment_jobs" jdbcType="VARCHAR" property="employment_jobs" />
		<result column="employment_student" jdbcType="VARCHAR"
			property="employment_student" />
	</resultMap>
	<sql id="Base_Column_List">
		employment_id, employment_name, employment_company, employment_jobs, employment_student
	</sql>
	
	<!-- 根据id查 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employment
		where employment_id = #{employment_id,jdbcType=VARCHAR}
	</select>
	
	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from employment
		where employment_id = #{employment_id,jdbcType=VARCHAR}
	</delete>
	
	<!-- 增加 -->
	<insert id="insert" parameterType="com.tech.ssm.domain.Employment">
		insert into employment (employment_id, employment_name, employment_company,
		employment_jobs, employment_student)
		values (#{employment_id,jdbcType=VARCHAR}, #{employment_name,jdbcType=VARCHAR},
		#{employment_company,jdbcType=VARCHAR},#{employment_jobs,jdbcType=VARCHAR},
		#{employment_student,jdbcType=VARCHAR})
	</insert>
	
	
	<insert id="insertSelective"
		parameterType="com.tech.ssm.domain.Employment">
		insert into employment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="employment_id != null">
				employment_id,
			</if>
			<if test="employment_name != null">
				employment_name,
			</if>
			<if test="employment_company != null">
				employment_company,
			</if>
			<if test="employment_jobs != null">
				employment_jobs,
			</if>
			<if test="employment_student != null">
				employment_student,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="employment_id != null">
				#{employment_id,jdbcType=VARCHAR},
			</if>
			<if test="employment_name != null">
				#{employment_name,jdbcType=VARCHAR},
			</if>
			<if test="employment_company != null">
				#{employment_company,jdbcType=VARCHAR},
			</if>
			<if test="employment_jobs != null">
				#{employment_jobs,jdbcType=VARCHAR},
			</if>
			<if test="employment_student != null">
				#{employment_student,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective"
		parameterType="com.tech.ssm.domain.Employment">
		update employment
		<set>
			<if test="employment_name != null">
				employment_name = #{employment_name,jdbcType=VARCHAR},
			</if>
			<if test="employment_company != null">
				employment_company = #{employment_company,jdbcType=VARCHAR},
			</if>
			<if test="employment_jobs != null">
				employment_jobs = #{employment_jobs,jdbcType=VARCHAR},
			</if>
			<if test="employment_student != null">
				employment_student = #{employment_student,jdbcType=VARCHAR},
			</if>
		</set>
		where employment_id = #{employment_id,jdbcType=VARCHAR}
	</update>
	<!-- 更新 -->
	<update id="updateByPrimaryKey"
		parameterType="com.tech.ssm.domain.Employment">
		update employment
		set employment_name = #{employment_name,jdbcType=VARCHAR},
		employment_company = #{employment_company,jdbcType=VARCHAR},
		employment_jobs = #{employment_jobs,jdbcType=VARCHAR},
		employment_student = #{employment_student,jdbcType=VARCHAR}
		where employment_id = #{employment_id,jdbcType=VARCHAR}
	</update>

	<!-- 模糊查询 -->
	<select id="queryAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employment
		<where>
			<if test="employment_id!=null and employment_id!=''">
				and employment_id like concat("%",#{employment_id},"%")
			</if>
			<if test="employment_name!=null and employment_name!=''">
				and employment_name like concat("%",#{employment_name},"%")
			</if>
			<if test="employment_company!=null and employment_company!=''">
				and employment_company like concat("%",#{employment_company},"%")
			</if>
			<if test="employment_jobs!=null and employment_jobs!=''">
				and employment_jobs like concat("%",#{employment_jobs},"%")
			</if>
			<if test="employment_student!=null and employment_student!=''">
				and employment_student like concat("%",#{employment_student},"%")
			</if>
		</where>
	</select>
	
</mapper>